@using System;
@using System.Net.Http;
@using System.Text.Json;
@using System.Threading.Tasks;

@page "/"

<PageTitle>Yugioh Card Database</PageTitle>

<div>
    <h2>Search for a card! </h2>
    <div>
        <label>Card Name: </label>
        <input @bind=@cardNameQuery type="text" />
    </div>
    <button @onsubmit="OnSearch">Search!</button>

</div>


@if (searchedCard is not null && !string.IsNullOrWhiteSpace(searchedCard.cardName))
{
    <div>    
    <p>Card Name: @searchedCard.cardName</p>
    <p>Type: @searchedCard.typeline</p>
    <p>ATK: @searchedCard.atk</p>
    <p>DEF: @searchedCard.def</p>
    <p>Level: @searchedCard.level</p>
    <p>Archetype: @searchedCard.archetype</p>

    @if(searchedCard.card_images is not null)
    {
        <a href="@searchedCard.card_images[0].image_url">
            <img style="width: 23rem;" src="@searchedCard.card_images[0].image_url" />
        </a>

        <div></div>

        @foreach (CardImages link in searchedCard.card_images.Skip(1))
        {
            <a href="@link.image_url">
                <img style="width: 14rem;" src="@link.image_url" alt="searchedCard.cardName Image" />
            </a>
        }
    }
    else
    {
        <p>no images available</p>
    }    

</div>    
}

@code {
    #region classes 

    public class YugiohCard
    {
        public string cardName { get; set; }
        public string typeline { get; set; }
        public string atk { get; set; }
        public string def { get; set; }
        public string level { get; set; }
        public string attribute { get; set; }
        public string archetype { get; set; }
        public string firstImage { get; set; }
        public CardImages[]? card_images { get; set; }
    }

    public class CardImages
    {
        public int id{ get; set; }
        public string? image_url { get; set; }
    }

    public class CardData
    {
        public string name { get;set; }
        public string[] typeline { get; set; }
        public int atk { get; set; }
        public int def { get; set; }
        public int level { get; set; }
        public string attribute { get; set; }
        public string archetype { get; set; }
        public string image_url { get; set; }
        public CardImages[]? card_images { get; set; }
    }

    public class ApiResponse
    {
        public CardData[] data { get; set; }
    }

    #endregion

    #region startup method
    protected override async Task OnInitializedAsync()
    {
        await GetCard();
    }
    #endregion

    #region page variables

    YugiohCard searchedCard = new YugiohCard();
    public CardImages[] imagesToListMinusFirst { get; set; }

    //user input
    public string? cardNameQuery { get; set; }


    #endregion

    public async Task OnSearch()
    {
        await GetCard();
    }

    public async Task GetCard()
    {
        if (cardNameQuery is not null)
        {
            string encodedInput = cardNameQuery.Replace(" ", "%20");
            string url = $"https://db.ygoprodeck.com/api/v7/cardinfo.php?fname={encodedInput}";

            using (HttpClient client = new HttpClient())
            {
                try
                {
                    HttpResponseMessage response = await client.GetAsync(url);
                    response.EnsureSuccessStatusCode();
                    string responseBody = await response.Content.ReadAsStringAsync();

                    // deserialize json res
                    ApiResponse apiRes = JsonSerializer.Deserialize<ApiResponse>(responseBody);

                    // output string inside the data
                    if (apiRes?.data != null)
                    {
                        searchedCard.cardName = apiRes.data[0].name;
                        searchedCard.typeline = string.Join(", ", apiRes.data[0].typeline);
                        searchedCard.atk = apiRes.data[0].atk.ToString();
                        searchedCard.def = apiRes.data[0].def.ToString();
                        searchedCard.level = apiRes.data[0].level.ToString();
                        searchedCard.attribute = apiRes.data[0].attribute;
                        searchedCard.archetype = apiRes.data[0].archetype;
                        searchedCard.card_images = apiRes.data[0].card_images;

                    }
                }
                catch (HttpRequestException e)
                {
                    Console.WriteLine($"Request error: {e.Message}");
                }
            }
        }
















    }

     



}

