@using System;
@using System.Net.Http;
@using System.Text.Json;
@using System.Threading.Tasks;

@page "/"

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />


<div>

    <p>name (exact name)</p>
    <p>fname (ex: search all cards that contain "magician")</p>
    <p>id</p>
    <p>konami_id</p>
    <p>type</p>
    <p>atk</p>
    <p>def</p>
    <p>level</p>
    <p>race(spellcaster, warrior, insect, etc, also used for spell/trap cards like continuos, field, etc)</p>
    <p>attribute</p>
    <p>Link</p>
    <p>linkmarker(Top, Bottom, Left, Right, Bottom-Left, Bottom-Right, Top-Left, Top-Right)</p>
    <p>scale(pendulum scale value)</p>
    <p>cardset(metal raiders, soul fusion, etc)</p>
    <p>archetype(Dark Magician, Blue-Eyes, etc)</p>
    <p>banlist</p>
    <p>sort</p>
    <p>format</p>
    <p>misc (pass 'yes' to show additional response info)</p>
    <p>staple(checks if card is staple)</p>
    <p>has_effect(check if the card has an effect, pass in true/false value to this param)</p>
    <p>startdate, enddate, dateregion (based on cards release date). pass dateregion as tcg(default)( or ocg</p>
    <p></p>
    <p></p>
</div>



@code {
    public class Card
    {
        public int Id { get; set; }
        public string Name {get;set;}
        public string Type { get; set; }
        public string FrameType { get; set; }
        public string Description { get; set; }
        public string YGPRODECK_URL { get; set; }
    }



    public class ApiResponse
    {
        public string[] data { get; set; }
    }

    static async Task GetCard(string[] args)
    {
        string url = "https://db.ygoprodeck.com/api/v7/cardinfo.php";

        using (HttpClient client = new HttpClient())
        {
            try
            {
                HttpResponseMessage response = await client.GetAsync(url);
                response.EnsureSuccessStatusCode();
                string responseBody = await response.Content.ReadAsStringAsync();

                //deserialize json res
                ApiResponse apiRes = JsonSerializer.Deserialize<ApiResponse>(responseBody);

                //output string inside the data





            }
            catch (HttpRequestException e)
            {
                Console.WriteLine($"Request error: {e.Message}");
            }
        }










    }





}

